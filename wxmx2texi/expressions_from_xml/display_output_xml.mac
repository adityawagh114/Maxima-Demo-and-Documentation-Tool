load ("expressions_from_xml.mac");
load ("parse_token_list.lisp");

display_output_xml (f%) :=
  block ([outputs: expressions_from_xml (read_xml (f%))],
         print ("Process", length (outputs), "<output> tags."),
         for output in outputs
           do block ([mth_list: split_mth (first (output))],
                     print ("<mth> tag comprises", length (mth_list), "labels and corresponding expressions."),
                     for label_plus_bits in mth_list
                       do block ([label, expr_bits, tokens, e],
                                 label: strim (" ", first (first (label_plus_bits))),
                                 expr_bits: second (label_plus_bits),
                                 tokens: tokens_from (expr_bits),
                                 print (label, "Maxima expressions corresponding to XML:"),
                                 grind (expr_bits),
                                 print (label, "List of tokens extracted:"),
                                 grind (tokens),
                                 e: second (parse_token_list (tokens)),
                                 print (label, "Maxima expression reconstructed from tokens:"),
                                 print (label, "1-d:"),
                                 grind (e),
                                 print (label, "2-d (simplified):"),
                                 print (e),
                                 print (label, "2-d (unsimplified):"),
                                 display_expression_from (tokens),
                                 print (""))));

display_output_xml ("output-examples.xml");
