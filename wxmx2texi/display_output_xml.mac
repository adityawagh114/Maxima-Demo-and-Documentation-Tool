load ("expressions_from_xml.mac");
load ("parse_token_list.lisp");
load ("wxmx2texi.lisp");

display_output_xml (f%,[location]) :=
  block ([outputs: expressions_from_xml (read_xml (f%))],
        str1:"",str2:"",str3:"",
         for output in outputs
           do block ([mth_list: split_mth (first (output))],
                     for label_plus_bits in mth_list
                       do block ([label, expr_bits, tokens, e],
                                 label: strim (" ", first (first (label_plus_bits))),
                                 expr_bits: second (label_plus_bits),
                                 tokens: tokens_from (expr_bits),
                                 if string(tokens[1])="matrix" then (
                                  pop(tokens),
                                  pop(tokens),
                                  pop(tokens),
                                  push(?makealias("("),tokens), 
                                  push('matrix,tokens),
                                   tokens:reverse(tokens),
                                    temp:[tokens[1]],
                                   for i:2 while i<=length(tokens)-1 do
                                   (if (tokens[i+1]= ?makealias("[")) then([]) else 
                                      (push(tokens[i],temp))),
                                    push('matrix,temp),
                                   tokens:temp),     
                                      kk:errcatch(parse_token_list(tokens)), 
                                      if length(kk)>0 then        
                                 e: second (kk[1]) else e:"",
                                 ll:errcatch(display_expression_from (tokens)),
                                 if length(ll)>0 then hh:ll[1] else hh:"",
                                 file_output_append:true,
                                 (if emptyp(location) then [] else with_stdout(location[1],print(hh))),
                                 str1:sconcat(str1,", ",string (e)),
                                 str2:sconcat(str2,", ",tex1(e)),
                                 str3:e)),
                                  arr:[str1,str2,str3],
                                  arr);

display_output_xml1(f%):=(
arr:display_output_xml(f%), 
arr[1]);

display_output_xml2(f%):=(
arr:display_output_xml(f%), 
arr[2]);

display_output_xml3(f%,location):=(
display_output_xml(f%,location));
